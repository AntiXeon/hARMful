// WARNING: This file is automatically generated. Any manual modification will be removed.
#include <scene/components/materials/shaders/GLSL/450/DeferredRendering.hpp>

std::string DeferredRenderingFinalVertexCode =
"\
layout(location = 0) in vec3 position ;\n\
layout(location = 1) in vec2 texCoords ;\n\
\n\
layout(location = 0) out vec2 outTexCoords ;\n\
\n\
void main() {\n\
    gl_Position = vec4(position, 1.f) ;\n\
    outTexCoords = texCoords ;\n\
}\n\
" ;

std::string DeferredRenderingFinalFragmentCode =
"\
// Material for deferred rendering. Applied on a simple quad on the whole\n\
// viewport area.\n\
\n\
layout(binding = 0) uniform sampler2D albedo ;\n\
layout(binding = 1) uniform sampler2D normal ;\n\
layout(binding = 2) uniform sampler2D specular ;\n\
layout(binding = 3) uniform sampler2D position ;\n\
\n\
layout(location = 0) in vec2 texCoords ;\n\
\n\
out vec4 outColor ;\n\
\n\
void main() {\n\
    outColor = vec4(texture(albedo, texCoords).rgb, 1.f) ;\n\
}\n\
" ;

